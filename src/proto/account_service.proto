syntax = "proto3";

package account_service;

import "shared.proto";

service AccountService {
  rpc Login (LoginCredentials) returns (AuthResult);
  rpc Register (RegisterCredentials) returns (AuthResult);
  rpc GetProfile (GetProfileOptions) returns (GetProfileResult);
  rpc AddCurrency (AddCurrencyOptions) returns (AddCurrencyResult);
  rpc CanPerformTransaction (TransactionData) returns (CanPerformTransactionResult);
  rpc ChangeCurrency (ChangeCurrencyOptions) returns (ChangeCurrencyResult);
  rpc BlockCard (CardIdentifier) returns (BlockCardResult);
  rpc UnblockCard (CardIdentifier) returns (UnblockCardResult);
}

message LoginCredentials {
  string email = 1;
  string password = 2;
}

message AuthCredentials {
  string email = 1;
  string full_name = 2;
}

message AuthResult {
  oneof result {
    AuthCredentials credentials = 1;
    shared.ServiceError error = 2;
  }
}

message RegisterCredentials {
  string email = 1;
  string password = 2;
  string full_name = 3;
  int64 created_at = 4;
}

message GetProfileOptions {
  string email = 1;
}

message Profile {
  string email = 1;
  string full_name = 2;
  int64 created_at = 4;
}

message GetProfileResult {
  oneof result {
    Profile profile = 1;
    shared.ServiceError error = 2;
  }
}

message AddCurrencyOptions {
  string currency = 1;
  int32 amount = 2;
  string card_code = 3;
}

message AddCurrencyResult {
  shared.ServiceError error = 1;
}

message TransactionData {
  string currency = 1;
  int32 amount = 2;
  string card_code = 3;
}

message CanPerformTransactionResult {
  oneof result {
    bool can_perform = 1;
    shared.ServiceError error = 2;
  }
}

message ChangeCurrencyOptions {
  string currency = 1;
  string card_code = 2;
}

message ChangeCurrencyResult {
  shared.ServiceError error = 1;
}

message CardIdentifier {
  string card_code = 1;
}

message BlockCardResult {
  shared.ServiceError error = 1;
}

message UnblockCardResult {
  shared.ServiceError error = 1;
}
